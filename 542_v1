public class Solution {
    public int[,] UpdateMatrix(int[,] matrix) {
        var rows = matrix.GetLength(0);
        var cols = matrix.GetLength(1);

        var result = new int[rows,cols];
        var hash = new HashSet<int>();
        for(int i = 0;i<rows;i++){
            for(int j = 0;j<cols;j++){
                hash.Add(i*cols+j);
            }
        }

        while(hash.Any()){
            var newHash = new HashSet<int>();
            foreach(var item in hash){
                var i = item/cols;
                var j = item % cols;
                if(matrix[i,j] == 0){
                    if(i > 0 && matrix[i-1,j] == 1){
                        result[i-1,j] = result[i,j]+1;
                        newHash.Add((i-1)*cols+j);
                    }

                    if(i < rows-1 && matrix[i+1,j] == 1){
                        result[i+1,j] = result[i,j]+1;
                        newHash.Add((i+1)*cols+j);
                    }

                    if(j < cols -1 && matrix[i,j+1] == 1){
                        result[i,j+1] = result[i,j]+1;
                        newHash.Add(i*cols+j+1);
                    }

                    if(j > 0 && matrix[i,j-1] == 1){
                        result[i,j-1] = result[i,j]+1;
                        newHash.Add(i*cols+j-1);
                    }
                }else{
                    newHash.Add(i*cols+j);
                }

            }

            foreach(var item in newHash){
                if(result[item/cols,item%cols] != 0)
                    matrix[item/cols,item%cols] = 0;
            }

            hash = newHash;
        }

        return result;
    }
}
