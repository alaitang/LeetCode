public class SnakeGame {


    /** Initialize your data structure here.
        @param width - screen width
        @param height - screen height
        @param food - A list of food positions
        E.g food = [[1,1], [1,0]] means the first food is positioned at [1,1], the second is at [1,0]. */
        private int[][] food = null;
        private int foodIndex = 0;
        private int width;
        private int height;
        private int totalFoods;
        private ArrayList<Integer> list = new ArrayList<Integer>();
        private HashSet<Integer> mapping = new HashSet<Integer>();
    public SnakeGame(int width, int height, int[][] food) {
        this.food = food;
        this.width = width;
        this.height = height;
        this.totalFoods = food.length;
        list.add(0);
        mapping.add(0);
    }

    /** Moves the snake.
        @param direction - 'U' = Up, 'L' = Left, 'R' = Right, 'D' = Down
        @return The game's score after the move. Return -1 if game over.
        Game over when snake crosses the screen boundary or bites its body. */
    public int move(String direction) {

        int head = (int)(list.get(0));
        int next = head;

        if(direction.equals("U")){
            next -= width;
        }else if(direction.equals("L")){
            next--;
        }else if(direction.equals("R")){
            next++;
        }else if(direction.equals("D")){
            next += width;
        }

        if(next< 0 || next >= height*width || (direction.equals("L") || direction.equals("R")) && next/width != head/width ){
            return -1;
        }
        //System.out.println(next+" -- "+foodIndex);
        if(totalFoods > 0 && next == food[foodIndex][0] * width + food[foodIndex][1]){
            foodIndex++;
            totalFoods--;
        }else{
            int tail = (int)(list.get(list.size()-1));
            mapping.remove(tail);
            list.remove(list.size()-1);
            if(mapping.contains(next))
                return -1;
        }

         mapping.add(next);
         list.add(0,next);
         return list.size()-1;
    }
}

/**
 * Your SnakeGame object will be instantiated and called as such:
 * SnakeGame obj = new SnakeGame(width, height, food);
 * int param_1 = obj.move(direction);
 */
