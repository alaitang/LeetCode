public class PhoneDirectory {

private Queue<int> sources = new Queue<int>();
private HashSet<int> disabled = new HashSet<int>();
    /** Initialize your data structure here
        @param maxNumbers - The maximum numbers that can be stored in the phone directory. */
    public PhoneDirectory(int maxNumbers) {
        for(int i = 0;i<maxNumbers;i++){
            sources.Enqueue(i);
        }
    }

    /** Provide a number which is not assigned to anyone.
        @return - Return an available number. Return -1 if none is available. */
    public int Get() {
        if(sources.Any())
        {
            var r = sources.Dequeue();
            disabled.Add(r);
            return r;
        }else{
            return -1;
        }
    }

    /** Check if a number is available or not. */
    public bool Check(int number) {
        return !disabled.Contains(number);
    }

    /** Recycle or release a number. */
    public void Release(int number) {
        if(!disabled.Contains(number))
            return;
        disabled.Remove(number);
        sources.Enqueue(number);
    }
}

/**
 * Your PhoneDirectory object will be instantiated and called as such:
 * PhoneDirectory obj = new PhoneDirectory(maxNumbers);
 * int param_1 = obj.Get();
 * bool param_2 = obj.Check(number);
 * obj.Release(number);
 */
