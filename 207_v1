public class Solution {
    public bool CanFinish(int numCourses, int[,] p) {
        var depends = new int[numCourses];
        var mapping = new Dictionary<int,List<int>>();

        int rows = p.GetLength(0);
        for(int i = 0;i<rows;i++){
            depends[p[i,0]]++;

            if(!mapping.ContainsKey(p[i,1])){
                mapping.Add(p[i,1],new List<int>());
            }
            mapping[p[i,1]].Add(p[i,0]);
        }

        while(depends.Any(x=>x==0)){
            for(int i = 0;i<numCourses;i++){
                if(depends[i] == 0){
                    if(mapping.ContainsKey(i)){
                        foreach(var item in mapping[i]){
                            depends[item]--;
                        }
                    }
                    depends[i] = -1;
                }
            }
        }

        return depends.All(x=>x<0);
    }
}
