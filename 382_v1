/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {

    /** @param head The linked list's head.
        Note that the head is guaranteed to be not null, so it contains at least one node. */
    Random rand = new Random();
    ListNode head = null;
    public Solution(ListNode head) {
        this.head = head;
    }

    /** Returns a random node's value. */
    public int GetRandom() {
        int i = 1;
        var result = head.val;
        var current = head;
        while(current.next != null){
            current = current.next;

            if(rand.Next(i+1) == i){
                result = current.val;
            }
            i++;
        }


        return result;
    }
}

/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(head);
 * int param_1 = obj.GetRandom();
 */
