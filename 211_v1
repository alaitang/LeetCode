public class WordDictionary {
    TireNode root = new TireNode();
    /** Initialize your data structure here. */
    public WordDictionary() {

    }

    /** Adds a word into the data structure. */
    public void AddWord(string word) {
        var current = root;
        foreach(var c in word){
            if(current.children[c-'a'] == null)
                current.children[c-'a'] = new TireNode();
            current = current.children[c-'a'];
        }
        current.isWord = true;
    }

    /** Returns if the word is in the data structure. A word could contain the dot character '.' to represent any one letter. */
    public bool Search(string word) {
        return Helper(word,0,root);
    }

    private bool Helper(string word,int index,TireNode node){
        if(index >= word.Length){
            return node.isWord;
        }else{
            if(word[index] == '.'){
                return node.children.Any(x=>x != null && Helper(word,index+1,x));
            }else if(node.children[word[index]-'a'] == null){
                return false;
            }else{
                return Helper(word,index+1,node.children[word[index]-'a']);
            }
        }
    }
}

public class TireNode{
    public TireNode[] children = new TireNode[26];

    public bool isWord;
}

/**
 * Your WordDictionary object will be instantiated and called as such:
 * WordDictionary obj = new WordDictionary();
 * obj.AddWord(word);
 * bool param_2 = obj.Search(word);
 */
