/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode ReverseKGroup(ListNode head, int k) {
        if(k <= 1 || head == null || head.next == null)
            return head;

        var dumperNode = new ListNode(-1){next = head};

        var p = dumperNode;

        var current = head;
        int i = 1;
        while(current != null){
            if(i % k == 0){
                var next = current.next;
                current.next = null;
                var c = p.next;
                var np = p.next;
                var pp = next;
                while(c != null){
                    var nn = c.next;
                    c.next = pp;
                    pp=c;
                    c = nn;
                }
                p.next = pp;
                p = np;
                current =next;
            }else{
                current=current.next;
            }
            i++;
        }

        return dumperNode.next;
    }
}
