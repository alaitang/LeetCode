public class Solution {
    public int MinCut(string s) {
        int len = s.Length;
        var dp = new int[len];
        var isMatch = new bool[len,len];
        var mapping = new Dictionary<char,List<int>>();

        for(int i = 0;i<len;i++){
            dp[i] = i == 0? 0 : (dp[i-1]+1);

            if(mapping.ContainsKey(s[i])){
                foreach(var item in mapping[s[i]]){
                    if(i-item <= 2 || isMatch[item+1,i-1]){
                        isMatch[item,i] = true;
                        dp[i] = Math.Min(item == 0 ? 0 : (dp[item-1]+1),dp[i]);
                    }
                }
                mapping[s[i]].Add(i);
            }else{
                mapping.Add(s[i],new List<int>(){i});
            }
        }
        return dp[len-1];
    }
}
