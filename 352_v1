/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class SummaryRanges {
private ArrayList<Integer> list = new ArrayList<Integer>();
    /** Initialize your data structure here. */
    public SummaryRanges() {

    }

    public void addNum(int val) {
        int index=Collections.binarySearch(list, val);

        if(index >= 0)
            return;

        index = Math.abs(index)-1;

        if(index % 2 == 0){
            boolean mergeRight = false;
            boolean mergeLeft = false;
            if(index < list.size() && list.get(index) == val+1){
                list.set(index,val);
                mergeRight = true;
            }

            if(index > 0 && list.get(index-1) == val-1){
                list.set(index-1,val);
                mergeLeft = true;
            }

            if(mergeLeft && mergeRight){
                list.remove(index);
                list.remove(index-1);
            }else if(!mergeLeft && !mergeRight){
                list.add(index,val);
                list.add(index,val);
            }
        }
    }

    public List<Interval> getIntervals() {
        List<Interval> result = new ArrayList<Interval>();
        int len = list.size();
        for(int i = 0;i<len;i+=2){
            result.add(new Interval(list.get(i),list.get(i+1)));
        }

        return result;
    }
}

/**
 * Your SummaryRanges object will be instantiated and called as such:
 * SummaryRanges obj = new SummaryRanges();
 * obj.addNum(val);
 * List<Interval> param_2 = obj.getIntervals();
 */
