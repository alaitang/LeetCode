/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode AddTwoNumbers(ListNode l1, ListNode l2) {
        int len1 = 0;
        var current = l1;
        while(current != null){
            len1++;
            current = current.next;
        }
        int len2 = 0;
        current = l2;
        while(current != null){
            len2++;
            current = current.next;
        }

        while(len1 != len2){
            if(len1 > len2){
                var node = new ListNode(0){next = l2};
                l2 = node;
                len2++;
            }else{
                var node = new ListNode(0){next = l1};
                l1 = node;
                len1++;
            }
        }

        var result = Helper(l1,l2);

        if(result != null && result.val/10 > 0){
            var node = new ListNode(result.val/10){next = result};
            result.val = result.val % 10;
            result = node;
        }

        return result;
    }

    private ListNode Helper(ListNode l1,ListNode l2){
        if(l1 != null){
            var result = new ListNode(l1.val+l2.val);
            result.next = Helper(l1.next,l2.next);
            if(result.next != null){
                result.val += result.next.val / 10;
                result.next.val = result.next.val %10;
            }
            return result;
        }else{
            return null;
        }
    }

}
