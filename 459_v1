public class Solution {
    public bool RepeatedSubstringPattern(string s) {

        int len = s.Length;
        var mapping = new int[26];
        foreach(var c in s){
            mapping[c-'a']++;
        }
        var m1 = new int[26];

        var sb = new StringBuilder();

        for(int i = 0;i<len/2;i++){
            char c = s[i];
            sb.Append(c);
            m1[c-'a']++;

            if(len % (i+1) ==0 && mapping[c-'a'] % m1[c-'a'] == 0){
                int k = mapping[c-'a'] / m1[c-'a'];
                bool b = true;
                for(int j = 0;j<26 && b;j++){
                    if(mapping[j] != 0){
                        b &= m1[j] != 0 && mapping[j]/m1[j] == k;
                    }
                }
                //Console.WriteLine(b);
                if(b && string.Join("", Enumerable.Repeat(sb.ToString(), k))==s)
                    return true;
            }
        }

        return false;
    }
}
