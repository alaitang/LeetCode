public class Solution {
    public bool IsAdditiveNumber(string num) {
        int len = num.Length;

        for(int i = 0;i<len;i++){
            if(num[0] == '0' && i > 0)
                return false;

            string n1 = num.Substring(0,i+1);

            for(int j = i+1;j<len-1;j++){

                if(num[i+1] == '0' && j > i+1)
                    break;

                string n2 = num.Substring(i+1,j-i);
                string nextAdd = Add(n1,n2);
                if(Helper(num.Substring(j+1),nextAdd,n2))
                    return true;
            }
        }

        return false;
    }

    private bool Helper(string num,string next,string p){
        //Console.WriteLine(num+" , "+next+" , "+p);
        if(num == "")
            return true;

        if(!num.StartsWith(next))
            return false;

        var nextAdd = Add(next,p);

        return Helper(num.Substring(next.Length),nextAdd,next);
    }

    private string Add(string s1, string s2){
        int i = s1.Length-1;
        int j = s2.Length-1;
        int add = 0;
        string result = "";
        while(i >=0 || j >= 0 || add != 0){
            add += (i >= 0 ? s1[i]-'0' : 0) + (j >= 0 ? s2[j]-'0' : 0);
            result = (add % 10) + result;
            add /=10;
            i--;
            j--;
        }

        return result;
    }
}
