public class Solution {
    public int LongestLine(int[,] M) {
        int result = 0;
        int rows = M.GetLength(0);
        int cols = M.GetLength(1);
        var dpRows = new int[rows];
        var dpCols = new int[cols];
        var dpdig = new int[rows+cols];
        var dpantdig = new int[rows+cols];

        for(int i = 0;i<rows;i++){
            for(int j = 0;j<cols;j++){
                if(M[i,j] == 1){
                    dpRows[i]++;
                    dpCols[j]++;
                    dpdig[i+j]++;
                    dpantdig[cols-1-j+i]++;
                    result = Math.Max(result,Math.Max(Math.Max(dpRows[i],dpCols[j]),Math.Max(dpdig[i+j],dpantdig[cols-1-j+i])));
                }else{
                    dpRows[i] = 0;
                    dpCols[j] = 0;
                    dpdig[i+j] = 0;
                    dpantdig[cols-1-j+i] = 0;
                }


            }
        }
        return result;
    }
}
