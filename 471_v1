public class Solution {
    public string Encode(string s) {
        int len = s.Length;

        var dp = new string[len,len];

        return Helper(s,0,s.Length-1,dp,new Dictionary<string,string>());
    }

    private string Helper(string s, int low,int high,string[,] dp,Dictionary<string,string> mapping){
        if(low > high)
            return "";
        else if(high-low+1 <= 3){
            dp[low,high] = s.Substring(low,high-low+1);
        }else if(mapping.ContainsKey(s.Substring(low,high-low+1))){
            dp[low,high] = mapping[s.Substring(low,high-low+1)];
        }
        else if(dp[low,high] == null){
            string subStr = s.Substring(low,high-low+1);
            dp[low,high] = subStr;
            string ss = "";
            for(int i = low;i<=high;i++){
                string str = Helper(s,low,i,dp,mapping)+Helper(s,i+1,high,dp,mapping);
                ss += s[i];
                if(subStr.Length%ss.Length == 0 && subStr.Replace(ss,"") == ""){
                    str = subStr.Length/ss.Length+"["+dp[low,i]+"]";
                }

                if(dp[low,high].Length >= str.Length){
                    dp[low,high] = str;
                }
            }
            mapping.Add(subStr,dp[low,high]);
        }

        return dp[low,high];
    }
}
