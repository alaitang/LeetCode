public class Solution {
    public string ParseTernary(string expression) {
        return Helper(expression,0,expression.Length-1);
    }

    private string Helper(string expression,int low,int high){
        int n = 0;
        int m = 0;
        int i = low;

        while(i <= high && (n != m || n == 0 && m == 0)){
            if(expression[i] == '?'){
                n++;
            }
            else if(expression[i] == ':'){
                m++;
            }
            i++;
        }
        if(n == 0 && m == 0)
            return expression.Substring(low,high-low+1);
        else if(expression[low] == 'T'){
            return Helper(expression,low+2,i-2);
        }else{
            return Helper(expression,i,high);
        }
    }
}
