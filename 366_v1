/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public IList<IList<int>> FindLeaves(TreeNode root) {
        var result = new List<IList<int>>();
        Helper(result,root);
        return result;
    }

    private int Helper(IList<IList<int>> result,TreeNode root){
        if(root == null)
            return 0;

        int leftR = Helper(result,root.left);
        int rightR = Helper(result,root.right);

        int k = Math.Max(leftR,rightR);

        if(k >= result.Count){
            result.Add(new List<int>());
        }

        result[k].Add(root.val);

        return k+1;
    }
}
