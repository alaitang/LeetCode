public class Solution {
    public IList<int> LargestDivisibleSubset(int[] nums) {
        int len = nums.Length;

        int[] dp = new int[len];
        int[] lendp = new int[len];
        Array.Sort(nums);
        int maxLen = 0;
        int index = -1;
        for(int i = 0;i<len;i++){
            lendp[i] = 1;
            dp[i] = i;
            for(int j = 0;j<i;j++){
                if(nums[i] % nums[j] == 0){
                    if(lendp[j]+1 > lendp[i]){
                        lendp[i] = lendp[j]+1;
                        dp[i] = j;
                    }
                }
            }
            if(lendp[i] > maxLen){
                index = i;
                maxLen = lendp[i];
            }
            //Console.WriteLine(dp[i]+","+lendp[i]);
        }

        var result = new List<int>();


        while(index != -1 && dp[index] != index){
            result.Insert(0,nums[index]);
            index = dp[index];
        }

        if(index != -1){
            result.Insert(0,nums[index]);
        }

        return result;

    }
}
