public class Solution {
    public IList<string> ReadBinaryWatch(int num) {
        var mapping = new Dictionary<int,List<int>>();
        var dp = new int[60];
        for(int i = 0;i<60;i++){
            if(i%2 == 1)
                dp[i] = dp[i-1]+1;
            else
                dp[i] = dp[i/2];
            if(!mapping.ContainsKey(dp[i]))
                mapping.Add(dp[i],new List<int>());
            mapping[dp[i]].Add(i);
        }

        IList<string> result = new List<string>();
        for(int i = 0;i<=num;i++){
            if(!mapping.ContainsKey(i))
                continue;
            foreach(var hh in mapping[i]){
                if(hh >11 || !mapping.ContainsKey(num-i))
                    continue;
                foreach(var mm in mapping[num-i]){
                    result.Add(hh+":"+(mm+"").PadLeft(2,'0'));
                }
            }
        }
        return result;
    }
}
