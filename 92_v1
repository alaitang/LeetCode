/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode ReverseBetween(ListNode head, int m, int n) {
        if(head == null || head.next == null || m == n)
            return head;
        var dumpNode = new ListNode(-1){next = head};

        var current = dumpNode;
        ListNode mBefore = null;
        ListNode nNode = null;
        int k = 0;
        var p = dumpNode;
        while(current!=null && k <= n){
            if(k == m){
                mBefore = p;
            }else if(k > m){
                var next = current.next;
                current.next = p;

                if(k == n){
                    mBefore.next.next = next;
                    mBefore.next = current;
                }

                p = current;
                current = next;
                k++;
                continue;
            }
            p = current;
            current = current.next;
            k++;
        }
        return dumpNode.next;
    }
}
