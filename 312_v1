public class Solution {
    public int MaxCoins(int[] nums) {
        int len = nums.Length;
        return Helper(nums,new int[len,len],0,len-1,1,1);
    }

    private int Helper(int[] nums,int[,] dp,int low,int high,int lowValue,int highValue){
        if(low > high)
            return 0;
        if(dp[low,high] == 0){
            int max = 0;
            for(int i = low;i<=high;i++){
                int v = Helper(nums,dp,low,i-1,lowValue,nums[i])
                    + nums[i]*highValue*lowValue + Helper(nums,dp,i+1,high,nums[i],highValue);
                dp[low,high] = Math.Max(v,dp[low,high]);
            }
        }
        return dp[low,high];
    }
}
