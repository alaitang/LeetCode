/**
 * Definition for an interval.
 * public class Interval {
 *     public int start;
 *     public int end;
 *     public Interval() { start = 0; end = 0; }
 *     public Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public bool CanAttendMeetings(Interval[] intervals) {
        int len = intervals.Length;

        intervals = intervals.OrderBy(x=>x.start).ToArray();
        int n = 0;
        for(int i = 0;i<len;i++){
            if(i == 0){
                n = intervals[i].end;
            }else{
                if(intervals[i].start < n){
                    return false;
                }else{
                    n = intervals[i].end;
                }
            }
        }
        return true;
    }
}
