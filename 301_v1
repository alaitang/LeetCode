public class Solution {
    public IList<string> RemoveInvalidParentheses(string s) {
        var result = new HashSet<string>();
        var queue = new Queue<string>();
        var indexQueue = new Queue<int>();
        queue.Enqueue(s);
        indexQueue.Enqueue(0);
        int b = 0;
        while(queue.Any()){
            var str = queue.Dequeue();
            var index = indexQueue.Dequeue();
            int len = str.Length;
            int n = 0;
            for(int i = 0;i<len;i++){
                if(str[i] == '('){
                    n++;
                }else if(str[i] == ')')
                {
                    n--;
                }

                if(n < 0){
                    b++;
                    HandleClose(str,index,i,queue,indexQueue);
                    break;
                }
            }

            if(n == 0){
                result.Add(str);
            }else if(n > 0){
                var arr = str.ToCharArray().Select(x=>x+"").ToArray();
                HandleOpen(result,arr,index,len-1,n,0);
            }
        }
        return result.ToList();

    }

    private void HandleClose(string s,int low,int high,Queue<string> queue,Queue<int> indexQueue){
        List<string> result = new List<string>();
        for(int i = low;i<=high;i++){
            if(s[i] == ')' && (i==low || s[i-1] != ')')){
                queue.Enqueue(s.Substring(0,i)+s.Substring(i+1));
                indexQueue.Enqueue(i);
            }
        }

    }

    private void HandleOpen(HashSet<string> result , string[] arr,int low,int high,int k,int n){
        for(int i = high;i>=low;i--){
                if(arr[i] == ")")
                    n--;
                else if(arr[i] == "(" && k > 0){
                    n++;
                    if(n > 0){
                        arr[i] = "";
                        n--;
                        k--;
                    }else if(n <= 0 && (i+1 > high || arr[i+1] != "(")){
                        arr[i] = "";
                        HandleOpen(result,new List<string>(arr).ToArray(),low,i-1,k-1,n-1);
                        arr[i] = "(";
                    }
                }
            }

            if(k == 0){
                result.Add(string.Join("",arr));
            }
    }
}
