public class Solution {
    public int Trap(int[] height) {
        int max = 0;
        int len = height.Length;
        var dpLeft = new int[len];
        var dpRight = new int[len];
        for(int i = 0;i<len;i++){
            dpLeft[i] = max;
            max = Math.Max(max,height[i]);
        }
        max = 0;

        for(int i = len-1;i>=0;i--){
            dpRight[i] = max;
            max = Math.Max(max,height[i]);
        }

        int result = 0;

        for(int i = 0;i<len;i++){
            result += Math.Max(0,Math.Min(dpLeft[i],dpRight[i])-height[i]);
        }

        return result;
    }
}
