/**
 * Definition for an interval.
 * public class Interval {
 *     public int start;
 *     public int end;
 *     public Interval() { start = 0; end = 0; }
 *     public Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public IList<Interval> Merge(IList<Interval> intervals) {
        intervals = intervals.OrderBy(x=>x.start).ToList();

        for(int i =1;i<intervals.Count;i++){
            if(intervals[i].start <= intervals[i-1].end){
                intervals[i-1].end = Math.Max(intervals[i].end,intervals[i-1].end);
                intervals.RemoveAt(i);
                i--;
            }
        }

        return intervals;
    }
}
