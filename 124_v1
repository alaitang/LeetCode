/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int MaxPathSum(TreeNode root) {
        if(root == null)
            return 0;

        var result = Helper(root);
        return result[1];
    }

    private int[] Helper(TreeNode root){
        int[] result = new int[2]{root.val,root.val};
        if(root.left != null && root.right != null){
            var leftR = Helper(root.left);
            var rightR = Helper(root.right);
            result[0] = Math.Max(root.val,Math.Max(leftR[0]+root.val,rightR[0]+root.val));
            result[1] = Math.Max(Math.Max(result[0],Math.Max(leftR[1],rightR[1])),leftR[0]+root.val+rightR[0]);
        }else if(root.left != null){
            var leftR = Helper(root.left);
            result[0] = Math.Max(leftR[0]+root.val,root.val);
            result[1] = Math.Max(result[0],leftR[1]);
        }else if(root.right != null){
            var rightR = Helper(root.right);
            result[0] = Math.Max(rightR[0]+root.val,root.val);
            result[1] = Math.Max(result[0],rightR[1]);
        }

        //Console.WriteLine(root.val+","+string.Join(",",result));
        return result;

    }
}
