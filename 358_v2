public class Solution {
    public string RearrangeString(string s, int k) {
        var mapping = new int[26];
        var indexArr = new int[26];
        foreach(var c in s){
            mapping[c-'a']++;
        }
        int len = s.Length;
        StringBuilder sb = new StringBuilder();
        for(int i = 0;i<len;i++){
            char c = Helper(mapping,indexArr,i);
            if(c >= 'a'){
                sb.Append(c);
                mapping[c-'a']--;
                indexArr[c-'a']= i+k;
            }else{
                return "";
            }
        }
        return sb.ToString();
    }

    private char Helper(int[] mapping,int[] indexArr,int index){
        char r = (char)('a'-1);
        int max = -1;
        for(char c = 'a';c<='z';c++){
            if(mapping[c-'a'] > 0 && index >= indexArr[c-'a'] && mapping[c-'a'] >= max){
                r = c;
                max = mapping[c-'a'];
            }
        }

        return r;
    }


}
